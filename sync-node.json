{
   "AWSTemplateFormatVersion":"2010-09-09",
   "Description":"Sync Node Stack",
   "Parameters":{
      "Environment":{
         "Description":"Environment",
         "AllowedValues":[
            "dev",
            "stage",
            "prod"
         ],
         "Default":"stage",
         "Type":"String"
      },
      "Path":{
         "Description":"AWS Path",
         "Default":"/sync_1_5/",
         "Type":"String"
      },
      "SyncNodeInstanceType":{
         "Description":"Sync Node Instance Type",
         "Default":"m1.small",
         "AllowedValues":[
            "t1.micro",
            "m1.small",
            "m1.medium",
            "m1.large",
            "m1.xlarge",
            "m2.xlarge",
            "m2.2xlarge",
            "m2.4xlarge",
            "m3.xlarge",
            "m3.2xlarge",
            "c1.medium",
            "c1.xlarge",
            "cc1.4xlarge",
            "cc2.8xlarge",
            "cg1.4xlarge"
         ],
         "ConstraintDescription":"must be a valid EC2 instance type.",
         "Type":"String"
      },
      "ProvisioningVersion":{
         "Description":"Puppet code version. The RPM version of puppet-config-common and puppet-config-sync_1_5 used to provision the stack. This value can be either a version number (e.g. 20131220135603) or 'latest' to get the newest code. Versions can be found here : https://github.com/mozilla-services/puppet-config/tags",
         "Default":"latest",
         "AllowedPattern":"[0-9]{14}|latest",
         "ConstraintDescription":"must either be the string 'latest' or an all numeric rpm version like 20131220135603",
         "Type":"String"
      }
   },
   "Mappings":{
      "RegionMap":{
         "us-west-2":{
            "SyncNodeAMI":"ami-6afe9e5a"
         },
         "us-east-1":{
            "SyncNodeAMI":"ami-059ea16c"
         }
      },
      "AccountMap":{
         "142069644989":{
            "SyncNodeKeyPair":"20130730-svcops-base-key-dev",
            "Name":"moz-svc-dev-old",
            "AccountType":"EC2-Classic"
         },
         "351644144250":{
            "SyncNodeKeyPair":"20130730-svcops-base-key-prod",
            "Name":"moz-svc-prod-old",
            "AccountType":"EC2-Classic"
         },
         "361527076523":{
            "SyncNodeKeyPair":"20130730-svcops-base-key-prod",
            "Name":"moz-svc-prod",
            "AccountType":"EC2-VPC"
         },
         "613808223628":{
            "SyncNodeKeyPair":"20130730-svcops-base-key-prod",
            "Name":"moz-svc-dev",
            "AccountType":"EC2-VPC"
         },
         "123456789012":{
            "SyncNodeKeyPair":"This value is never used but is required for validation. Otherwise you'll get the error 'Template error: Unable to get mapping for AccountMap::123456789012::SyncNodeKeyPair'",
            "Name":"This value is never used but is required",
            "AccountType":"This value is never used but is required"
         }
      },
      "EnvironmentMap":{
         "dev":{
            "Var":"Value"
         },
         "stage":{
            "Var":"Value"
         },
         "prod":{
            "Var":"Value"
         }
      }
   },
   "Conditions":{
      "IsEC2-VPC":{
         "Fn::Equals":[
            {
               "Fn::FindInMap":[
                  "AccountMap",
                  {
                     "Ref":"AWS::AccountId"
                  },
                  "AccountType"
               ]
            },
            "EC2-VPC"
         ]
      }
   },
   "Resources":{
      "SyncNodeRole":{
         "Type":"AWS::IAM::Role",
         "Properties":{
            "AssumeRolePolicyDocument":{
               "Statement":[
                  {
                     "Effect":"Allow",
                     "Principal":{
                        "Service":[
                           "ec2.amazonaws.com"
                        ]
                     },
                     "Action":[
                        "sts:AssumeRole"
                     ]
                  }
               ]
            },
            "Path":{
               "Ref":"Path"
            },
            "Policies":[
               {
                  "PolicyName":"IAMTagReadPolicy",
                  "PolicyDocument":{
                     "Statement":[
                        {
                           "Effect":"Allow",
                           "Action":[
                              "EC2:DescribeTags"
                           ],
                           "Resource":[
                              "*"
                           ]
                        }
                     ]
                  }
               },
               {
                  "PolicyName":"IAMHieraSecretsPolicy",
                  "PolicyDocument":{
                     "Statement":[
                        {
                           "Effect":"Allow",
                           "Action":[
                              "S3:ListBucket"
                           ],
                           "Resource":[
                              "arn:aws:s3:::net.mozaws.ops.hiera-secrets"
                           ]
                        },
                        {
                           "Effect":"Allow",
                           "Action":[
                              "S3:GetObject"
                           ],
                           "Resource":[
                              "arn:aws:s3:::net.mozaws.ops.hiera-secrets/common.yaml",
                              {
                                 "Fn::Join":[
                                    "",
                                    [
                                       "arn:aws:s3:::net.mozaws.ops.hiera-secrets/type/",
                                       "sync_1_5",
                                       ".",
                                       "all_in_one_node",
                                       ".",
                                       {
                                          "Ref":"Environment"
                                       },
                                       ".",
                                       {
                                          "Ref":"AWS::StackName"
                                       },
                                       ".yaml"
                                    ]
                                 ]
                              },
                              {
                                 "Fn::Join":[
                                    "",
                                    [
                                       "arn:aws:s3:::net.mozaws.ops.hiera-secrets/type/",
                                       "sync_1_5",
                                       ".",
                                       "all_in_one_node",
                                       ".",
                                       {
                                          "Ref":"Environment"
                                       },
                                       ".yaml"
                                    ]
                                 ]
                              },
                              {
                                 "Fn::Join":[
                                    "",
                                    [
                                       "arn:aws:s3:::net.mozaws.ops.hiera-secrets/type/",
                                       "sync_1_5",
                                       ".",
                                       "all_in_one_node",
                                       ".yaml"
                                    ]
                                 ]
                              },
                              {
                                 "Fn::Join":[
                                    "",
                                    [
                                       "arn:aws:s3:::net.mozaws.ops.hiera-secrets/app/",
                                       "sync_1_5",
                                       ".",
                                       {
                                          "Ref":"Environment"
                                       },
                                       ".",
                                       {
                                          "Ref":"AWS::StackName"
                                       },
                                       ".yaml"
                                    ]
                                 ]
                              },
                              {
                                 "Fn::Join":[
                                    "",
                                    [
                                       "arn:aws:s3:::net.mozaws.ops.hiera-secrets/app/",
                                       "sync_1_5",
                                       ".",
                                       {
                                          "Ref":"Environment"
                                       },
                                       ".yaml"
                                    ]
                                 ]
                              },
                              {
                                 "Fn::Join":[
                                    "",
                                    [
                                       "arn:aws:s3:::net.mozaws.ops.hiera-secrets/app/",
                                       "sync_1_5",
                                       ".yaml"
                                    ]
                                 ]
                              },
                              {
                                 "Fn::Join":[
                                    "",
                                    [
                                       "arn:aws:s3:::net.mozaws.ops.hiera-secrets/env/",
                                       {
                                          "Ref":"Environment"
                                       },
                                       ".",
                                       {
                                          "Ref":"AWS::StackName"
                                       },
                                       ".yaml"
                                    ]
                                 ]
                              },
                              {
                                 "Fn::Join":[
                                    "",
                                    [
                                       "arn:aws:s3:::net.mozaws.ops.hiera-secrets/env/",
                                       {
                                          "Ref":"Environment"
                                       },
                                       ".yaml"
                                    ]
                                 ]
                              }
                           ]
                        }
                     ]
                  }
               },
               {
                  "PolicyName":"IAMPuppetRPMRepoPolicy",
                  "PolicyDocument":{
                     "Statement":[
                        {
                           "Effect":"Allow",
                           "Action":[
                              "S3:ListBucket"
                           ],
                           "Resource":[
                              "arn:aws:s3:::net.mozaws.ops.rpmrepo-puppet"
                           ]
                        },
                        {
                           "Effect":"Allow",
                           "Action":[
                              "S3:GetObject"
                           ],
                           "Resource":[
                              "arn:aws:s3:::net.mozaws.ops.rpmrepo-puppet/*"
                           ]
                        }
                     ]
                  }
               },
               {
                  "PolicyName":"IAMPuppetRPMProtectedRepoPolicy",
                  "PolicyDocument":{
                     "Statement":[
                        {
                           "Effect":"Allow",
                           "Action":[
                              "S3:ListBucket"
                           ],
                           "Resource":[
                              "arn:aws:s3:::net.mozaws.prod.ops.rpmrepo-protected"
                           ]
                        },
                        {
                           "Effect":"Allow",
                           "Action":[
                              "S3:GetObject"
                           ],
                           "Resource":[
                              "arn:aws:s3:::net.mozaws.prod.ops.rpmrepo-protected/*"
                           ]
                        }
                     ]
                  }
               },
               {
                  "PolicyName":"ec2-describe-instances",
                  "PolicyDocument":{
                     "Statement":[
                        {
                           "Action":[
                              "ec2:DescribeInstances",
                              "ec2:DescribeRegions"
                           ],
                           "Resource":[
                              "*"
                           ],
                           "Effect":"Allow"
                        }
                     ]
                  }
               },
               {
                  "PolicyName":"elb-describe-loadbalancers",
                  "PolicyDocument":{
                     "Statement":[
                        {
                           "Action":[
                              "elasticloadbalancing:DescribeInstanceHealth",
                              "elasticloadbalancing:DescribeLoadBalancers"
                           ],
                           "Resource":[
                              "*"
                           ],
                           "Effect":"Allow"
                        }
                     ]
                  }
               }
            ]
         }
      },
      "SyncNodeInstanceProfile":{
         "Type":"AWS::IAM::InstanceProfile",
         "Properties":{
            "Path":{
               "Ref":"Path"
            },
            "Roles":[
               {
                  "Ref":"SyncNodeRole"
               }
            ]
         }
      },
      "SyncNodeSecurityGroup":{
         "Type":"AWS::EC2::SecurityGroup",
         "Properties":{
            "GroupDescription":"Firefox Accounts Sync Node Security Group",
            "SecurityGroupIngress":[
               {
                  "FromPort":"443",
                  "IpProtocol":"tcp",
                  "CidrIp":"0.0.0.0/0",
                  "ToPort":"443"
               }
            ],
            "Tags":[
               {
                  "Key":"App",
                  "Value":"sync_1_5"
               },
               {
                  "Key":"Env",
                  "Value":{
                     "Ref":"Environment"
                  }
               },
               {
                  "Key":"Type",
                  "Value":"all_in_one_node"
               },
               {
                  "Key":"Stack",
                  "Value":{
                     "Ref":"AWS::StackName"
                  }
               },
               {
                  "Key":"Name",
                  "Value":"sync-node"
               }
            ]
         }
      },
      "SyncNodeInstance":{
         "Type":"AWS::EC2::Instance",
         "Metadata":{
            "AWS::CloudFormation::Init":{
               "config":{
                  "commands":{
                     "50_manage_puppet_update_configs_and_secrets":{
                        "command":{
                           "Fn::Join":[
                              " ",
                              [
                                 "/etc/puppet/bin/manage_puppet",
                                 "--update-configs puppet-config-common",
                                 {
                                    "Ref":"ProvisioningVersion"
                                 },
                                 "--update-configs puppet-config-sync_1_5",
                                 {
                                    "Ref":"ProvisioningVersion"
                                 },
                                 "--update-secrets",
                                 "--apply",
                                 "--apply-options \"--debug --logdest /var/log/initial_puppet_apply.log\"",
                                 "2>&1 > /var/log/initial_manage_puppet.log"
                              ]
                           ]
                        },
                        "cwd":"~"
                     }
                  }
               }
            },
            "Puppet":{
               "environment":{
                  "Ref":"Environment"
               },
               "region":{
                  "Ref":"AWS::Region"
               },
               "stackname":{
                  "Ref":"AWS::StackName"
               }
            }
         },
         "Properties":{
            "IamInstanceProfile":{
               "Ref":"SyncNodeInstanceProfile"
            },
            "ImageId":{
               "Fn::FindInMap":[
                  "RegionMap",
                  {
                     "Ref":"AWS::Region"
                  },
                  "SyncNodeAMI"
               ]
            },
            "InstanceType":{
               "Ref":"SyncNodeInstanceType"
            },
            "KeyName":{
               "Fn::FindInMap":[
                  "AccountMap",
                  {
                     "Ref":"AWS::AccountId"
                  },
                  "SyncNodeKeyPair"
               ]
            },
            "Monitoring":true,
            "SecurityGroups":[
               {
                  "Ref":"SyncNodeSecurityGroup"
               },
               "bastion-client"
            ],
            "Tags":[
               {
                  "Key":"App",
                  "Value":"sync_1_5"
               },
               {
                  "Key":"Env",
                  "Value":{
                     "Ref":"Environment"
                  }
               },
               {
                  "Key":"Type",
                  "Value":"all_in_one_node"
               },
               {
                  "Key":"Stack",
                  "Value":{
                     "Ref":"AWS::StackName"
                  }
               },
               {
                  "Key":"Name",
                  "Value":"sync-node"
               }
            ],
            "UserData":{
               "Fn::Base64":{
                  "Fn::Join":[
                     "",
                     [
                        "#!/bin/bash\n",
                        "yum update -y aws-cfn-bootstrap\n",
                        "/opt/aws/bin/cfn-init ",
                        "         --stack ",
                        {
                           "Ref":"AWS::StackName"
                        },
                        "         --resource SyncNodeInstance ",
                        "         --region ",
                        {
                           "Ref":"AWS::Region"
                        },
                        "         --verbose\n",
                        "CFNSTATUS=$?\n",
                        "/opt/aws/bin/cfn-signal --exit-code $CFNSTATUS ",
                        "  --data \"$(/opt/ec2/tools/bin/ec2-metadata -p | awk '{ print $2 }')\" ",
                        "'",
                        {
                           "Ref":"SyncNodeWaitConditionHandle"
                        },
                        "'",
                        "\n"
                     ]
                  ]
               }
            }
         }
      },
      "SyncNodeWaitConditionHandle":{
         "Type":"AWS::CloudFormation::WaitConditionHandle"
      },
      "SyncNodeWaitCondition":{
         "Type":"AWS::CloudFormation::WaitCondition",
         "DependsOn":"SyncNodeInstance",
         "Properties":{
            "Handle":{
               "Ref":"SyncNodeWaitConditionHandle"
            },
            "Timeout":"900"
         }
      }
   },
   "Outputs":{
      "SyncNodePublicDNSName":{
         "Description":"DNS Name of the Sync Node",
         "Value":{
            "Fn::GetAtt":[
               "SyncNodeInstance",
               "PublicDnsName"
            ]
         }
      }
   }
}